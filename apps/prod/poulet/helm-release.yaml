apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: poulet
  namespace: poulet
spec:
  interval: 60m
  chart:
    spec:
      chart: poulet
      version: "*"
      sourceRef:
        kind: HelmRepository
        name: poulet
      interval: 12h
  values:
    grafana:
      enabled: true
      replicas: 1
      extraSecretMounts:
        - name: auth-generic-oauth-secret-mount
          secretName: grafana-oauth-secret
          defaultMode: 0440
          mountPath: /etc/secrets/auth_generic_oauth
          readOnly: true



      plugins:
        - grafana-piechart-panel
        - grafana-worldmap-panel
        - grafana-clock-panel
        - grafana-simple-json-datasource
        - grafana-kubernetes-app
      resources:
        requests:
          memory: "100Mi"
          cpu: "200m"
        limits:
          memory: "400Mi"
          cpu: "400m"
      initChownData:
        resources:
          requests:
            memory: "100Mi"
            cpu: "200m"
          limits:
            memory: "400Mi"
            cpu: "400m"

      sidecar:
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
      imageRenderer:
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
      grafana.ini:
        server:
          root_url: https://grafana.al.apoorva64.com/
        security:
          cookie_samesite: strict
        auth.generic_oauth:
          enabled: true
          auto_login: true
          disable_login_form: true
          name: "Keycloak-OAuth"
          allow_sign_up: true
          client_id: $__file{/etc/secrets/auth_generic_oauth/client_id}
          client_secret: $__file{/etc/secrets/auth_generic_oauth/client_secret}
          scopes: "openid profile email roles"
          email_attribute_path: "email"
          login_attribute_path: "preferred_username"
          name_attribute_path: "name"
          auth_url: "https://keycloak.al.apoorva64.com/realms/poulet-realm/protocol/openid-connect/auth"
          token_url: "https://keycloak.al.apoorva64.com/realms/poulet-realm/protocol/openid-connect/token"
          api_url: "https://keycloak.al.apoorva64.com/realms/poulet-realm/protocol/openid-connect/userinfo"
          allow_assign_grafana_admin: true
          role_attribute_path: "contains(resource_access.grafana.roles[*], 'admin') && 'admin' || contains(resource_access.grafana.roles[*], 'editor') && 'Editor' || 'Viewer'"
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: traefik
          cert-manager.io/cluster-issuer: letsencrypt-prod
        hosts:
          - grafana.al.apoorva64.com
        tls:
          - secretName: grafana-tls
            hosts:
              - grafana.al.apoorva64.com
        path: /
        pathType: Prefix


    prometheus:
      enabled: true
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: traefik
          cert-manager.io/cluster-issuer: letsencrypt-prod
          traefik.ingress.kubernetes.io/router.middlewares: poulet-prometheus-basic-auth@kubernetescrd
        hosts:
          - host: prometheus.al.apoorva64.com
            paths:
              - path: /
                pathType: ImplementationSpecific
        tls:
          - secretName: prometheus-al-apoorva64-com-tls
            hosts:
              - prometheus.al.apoorva64.com

      alertmanager:
        enabled: false
        resources:
          requests:
            memory: "100Mi"
            cpu: "200m"
          limits:
            memory: "400Mi"
            cpu: "400m"
      kube-state-metrics:
        enabled: false
        resources:
          requests:
            memory: "100Mi"
            cpu: "200m"
          limits:
            memory: "400Mi"
            cpu: "400m"
      prometheus-node-exporter:
        enabled: false
        resources:
          requests:
            memory: "100Mi"
            cpu: "200m"
          limits:
            memory: "400Mi"
            cpu: "400m"
      prometheus-pushgateway:
        enabled: false
        resources:
          requests:
            memory: "100Mi"
            cpu: "200m"
          limits:
            memory: "400Mi"
            cpu: "400m"
      server:
        resources:
          requests:
            memory: "1Gi"
            cpu: "200m"
          limits:
            memory: "8Gi"
            cpu: "2000m"
        persistentVolume:
          storageClass: local-path
          size: 15Gi
        retentionSize: "15GB"
        extraArgs:
          web.enable-remote-write-receiver: null
        serverFiles:
          prometheus.yml:
            scrape_configs: [ ]

      configmapReload:
        prometheus:
          resources:
            requests:
              memory: "100Mi"
              cpu: "200m"
            limits:
              memory: "400Mi"
              cpu: "400m"
    keycloak:
      enabled: true
      proxy: edge
      auth:
        adminUser: admin
        existingSecret: keycloak-secret
        passwordSecretKey: password
      postgresql:
        auth:
          existingSecret: keycloak-postgresql-secret
          secretKeys:
            adminPasswordKey: postgresql-password
            replicationPasswordKey: replication-password
            userPasswordKey: user-password
      ingress:
        enabled: false
        hostname: keycloak.al.apoorva64.com

    mongodb:
      enabled: true
      auth:
        enabled: true
        existingSecret: mongo-db-secret
      nodeSelector:
        beta.kubernetes.io/arch: amd64


    patient-management:
      enabled: true
      resources:
        requests:
          memory: "100Mi"
          cpu: "200m"
        limits:
          memory: "400Mi"
          cpu: "400m"
      mongodb:
        existingSecret: mongo-db-secret
      keycloak:
        authServerUrl: "https://keycloak.al.apoorva64.com/realms/poulet-realm"
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: traefik
          cert-manager.io/cluster-issuer: letsencrypt-prod
        hosts:
          - host: patient-management.al.apoorva64.com
            paths:
              - path: /
                pathType: ImplementationSpecific
        tls:
          - secretName: patient-management-tls
            hosts:
              - patient-management.al.apoorva64.com

    alert-management:
      enabled: true
      resources:
        requests:
          memory: "100Mi"
          cpu: "200m"
        limits:
          memory: "400Mi"
          cpu: "400m"
      mongodb:
        existingSecret: mongo-db-secret
      keycloak:
        authServerUrl: "https://keycloak.al.apoorva64.com/realms/poulet-realm"
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: traefik
          cert-manager.io/cluster-issuer: letsencrypt-prod
        hosts:
          - host: alert-management.al.apoorva64.com
            paths:
              - path: /
                pathType: ImplementationSpecific
            tls:
              - secretName: alert-management-tls
                hosts:
                  - alert-management.al.apoorva64.com
    analyse-haut-niveau-management:
      enabled: true
      resources:
        requests:
          memory: "100Mi"
          cpu: "200m"
        limits:
          memory: "400Mi"
          cpu: "400m"
      mongodb:
        existingSecret: mongo-db-secret
      keycloak:
        authServerUrl: "https://keycloak.al.apoorva64.com/realms/poulet-realm"
    frontend:
      enabled: false