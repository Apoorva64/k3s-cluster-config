apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: bdns
  namespace: bdns
  labels:
    toolkit.fluxcd.io/tenant: sre-team
spec:
  interval: 60m
  postRenderers:
    - kustomize:
        patches:
          - target:
              kind: Deployment
            patch: |
              - op: add
                path: /spec/template/spec/dnsConfig
                value:
                  options:
                    - name: ndots
                      value: "1"
  chart:
    spec:
      chart: ./charts/bdns
      interval: 5m0s
      sourceRef:
        kind: GitRepository
        name: bdns
        namespace: bdns
  values:
    defaultRules:
      enabled: false

    bdns_api:
      image:
        tag: "sha-38d07f7"
      autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 20
        targetCPUUtilizationPercentage: 80
        targetMemoryUtilizationPercentage: 80
      resources:
        limits:
          cpu: 1000m
          memory: 400Mi
        requests:
          cpu: 500m
          memory: 200Mi

      ingress:
        annotations:
          kubernetes.io/ingress.class: traefik
          cert-manager.io/cluster-issuer: letsencrypt-prod
        enabled: true
        hosts:
          - host: bdns.al.apoorva64.com
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: bdns-tls
            hosts:
              - bdns.al.apoorva64.com
    blacklist_api:
      knative:
        enabled: true
        maxScale: 5
      image:
        tag: "sha-e8599f0"
      ingress:
        annotations:
          kubernetes.io/ingress.class: traefik
          cert-manager.io/cluster-issuer: letsencrypt-prod
        enabled: true
        hosts:
          - host: blacklist.al.apoorva64.com
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: blacklist-tls
            hosts:
              - blacklist.al.apoorva64.com
    eck-operator:
      enabled: false
    kube-prometheus-stack:
      enabled: true
      alertmanager:
        enabled: false
      nodeExporter:
        enabled: false
      kubernetesServiceMonitors:
        enabled: false
      kubeApiServer:
        enabled: false
      kubelet:
        enabled: false
      kubeControllerManager:
        enabled: false
      coreDns:
        enabled: false
      kubeEtcd:
        enabled: false
      kubeScheduler:
        enabled: false
      kubeProxy:
        enabled: false
      kubeStateMetrics:
        enabled: false
      prometheusOperator:
        enabled: false
      prometheus:
        enabled: false

      grafana:
        enabled: true
        image:
          tag: 10.4.14
        sidecar:
          datasources:
            enabled: true
            defaultDatasourceEnabled: false
            isDefaultDatasource: false
        admin:
          ## Name of the secret. Can be templated.
          existingSecret: "bdns-grafana"
          userKey: admin-user
          passwordKey: admin-password
        additionalDataSources:
          - name: Prometheus
            type: prometheus
            url: http://kube-prometheus-stack-prometheus.monitoring:9090
            access: proxy
            isDefault: true
          - uid: Elasticsearch
            orgId: 1
            name: Elasticsearch
            type: elasticsearch
            access: proxy
            url: $__env{ELASTICSEARCH_HOSTS}:$__env{ELASTICSEARCH_PORT}
            basicAuth: true
            basicAuthUser: elastic
            secureJsonData:
              basicAuthPassword: $__env{ELASTICSEARCH_PASSWORD}
            isDefault: false
            jsonData:
              index: bdns-*
              timeField: "@timestamp"
              tlsSkipVerify: true
          - uid: Redis
            orgId: 1
            name: Redis
            type: redis-datasource
            access: proxy
            url: $__env{REDIS_HOST}
            isDefault: false
            editable: true
            jsonData:
              client: standalone
              poolSize: 5
              timeout: 10
              pingInterval: 0
              pipelineWindow: 0
            secureJsonData:
              password: $__env{REDIS_PASSWORD}
        ingress:
          annotations:
            kubernetes.io/ingress.class: traefik
            cert-manager.io/cluster-issuer: letsencrypt-prod
          enabled: true
          hosts:
            - grafana.al.apoorva64.com
          tls:
            - secretName: grafana-tls
              hosts:
                - grafana.al.apoorva64.com
          path: /
          pathType: Prefix
