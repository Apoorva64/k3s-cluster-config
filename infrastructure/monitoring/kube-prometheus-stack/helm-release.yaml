apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
  labels:
    toolkit.fluxcd.io/tenant: sre-team
spec:
  interval: 60m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: "*"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: monitoring
      interval: 12h
  values:
    grafana:
      enabled: true
      extraSecretMounts:
        - name: auth-generic-oauth-secret-mount
          secretName: auth-generic-oauth-secret
          defaultMode: 0440
          mountPath: /etc/secrets/auth_generic_oauth
          readOnly: true


      additionalDataSources:
        - name: loki
          type: loki
          url: http://loki-read:3100
          access: proxy
          jsonData:
            tlsSkipVerify: true
            httpHeaderName1: "X-Scope-OrgID"
          secureJsonData:
            httpHeaderValue1: "admins"


      grafana.ini:
        server:
          root_url: https://grafana.monitoring.apoorva64.com
        auth.generic_oauth:
          enabled: true
          auto_login: true
          name: "Keycloak-OAuth"
          allow_sign_up: true
          client_id: $__file{/etc/secrets/auth_generic_oauth/client_id}
          client_secret: $__file{/etc/secrets/auth_generic_oauth/client_secret}
          scopes: "openid profile email roles offline_access"
          email_attribute_path: "email"
          login_attribute_path: "preferred_username"
          name_attribute_path: "name"
          auth_url: "https://keycloak.auth.apoorva64.com/auth/realms/lab/protocol/openid-connect/auth"
          token_url: "https://keycloak.auth.apoorva64.com/auth/realms/lab/protocol/openid-connect/token"
          api_url: "https://keycloak.auth.apoorva64.com/auth/realms/lab/protocol/openid-connect/userinfo"
          allow_assign_grafana_admin: true
          role_attribute_path: "contains(resource_access.grafana_oauth.roles[*], 'admin') && 'GrafanaAdmin' || contains(resource_access.grafana_oauth.roles[*], 'editor') && 'Editor' || 'Viewer'"
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: traefik
          cert-manager.io/cluster-issuer: letsencrypt-prod
          traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd
        hosts:
          - grafana.monitoring.apoorva64.com
        tls:
          - secretName: grafana-tls
            hosts:
              - grafana.monitoring.apoorva64.com
        paths:
          - /
    # Provision grafana-dashboards-kubernetes
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'grafana-dashboards-kubernetes'
            orgId: 1
            folder: 'Kubernetes'
            type: file
            disableDeletion: true
            editable: true
            options:
              path: /var/lib/grafana/dashboards/grafana-dashboards-kubernetes
    dashboards:
      grafana-dashboards-kubernetes:
        k8s-system-api-server:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
          token: ''
        k8s-system-coredns:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
          token: ''
        k8s-views-global:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          token: ''
        k8s-views-namespaces:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          token: ''
        k8s-views-nodes:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          token: ''
        k8s-views-pods:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
          token: ''