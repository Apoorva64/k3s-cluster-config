apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: harbor
  namespace: harbor
  labels:
    toolkit.fluxcd.io/tenant: sre-team
spec:
  interval: 60m
  chart:
    spec:
      chart: harbor
      version: "*"
      sourceRef:
        kind: HelmRepository
        name: harbor
        namespace: harbor
      interval: 12h
  values:
    externalURL: https://harbor.storage.apoorva64a.com
    expose:
      ingress:
        hosts:
          core: harbor.storage.apoorva64.com
        annotations:
          kubernetes.io/ingress.class: traefik
          cert-manager.io/cluster-issuer: letsencrypt-prod
          traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd
    persistence:
      persistentVolumeClaim:
        registry:
          storageClass: nfs-client
          size: 1Ti
        database:
          storageClass: longhorn-single-replica
        redis:
          storageClass: longhorn-single-replica
        trivy:
          storageClass: longhorn-single-replica
    portal:
      nodeSelector:
        kubernetes.io/hostname: node-apoorva2
    registry:
      nodeSelector:
        kubernetes.io/hostname: node-apoorva2
    core:
      nodeSelector:
        kubernetes.io/hostname: node-apoorva2
    database:
      type: external
      external:
        host: "harbor-database-postgres-postgresql.harbor.svc.cluster.local"
        port: "5432"
        username: "harbor"
        coreDatabase: "harbor"
        # if using existing secret, the key must be "password"
        existingSecret: "harbor-database-postgresql"
    redis:
      type: external
      external:
        addr: "harbor-database-redis-master.harbor.svc.cluster.local:6379"
        existingSecret: harbor-database-redis-password